# vim: set filetype=sh:

which gcc > /dev/null 2>&1 || alias gcc=cc
which setterm > /dev/null 2>&1 && setterm -blength 0
cless() {
	if which ydiff > /dev/null 2>&1; then
		ydiff
	elif which cdiff > /dev/null 2>&1; then
		cdiff
	elif which colordiff > /dev/null 2>&1; then
		colordiff | less
	else
		less
	fi
}

if [ "$(stty speed 2>/dev/null || echo 9600)" -lt "38400" ]; then
	stty speed 38400 >/dev/null 2>&1 || :
fi

# Portable ls(1) colors
if [ "$DISABLE_LS_COLORS" != "true" ]
then
        # Find the option for using colors in ls, depending on the version: Linux or BSD
        ls --color -d . &>/dev/null 2>&1 && alias ls='ls -aF --color=auto' || alias ls='ls -GFa'
fi
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias rgrep='rgrep --color=auto'
alias nopaste='printf "\e[?2004l"'

zpool() {
	local ZFS_COLOR

	if [ -t 0 ]; then
		export ZFS_COLOR=1
	fi
	command zpool "$@"
}

reboot() {
	case "$(uname -r)" in
	FreeBSD)
		# FreeBSD <= 13 (as of 2022-06) does not have graceful 'reboot'
		if [ "$#" -eq 0 ]; then
			exec shutdown -r now
		fi
		;;
	esac
	command reboot "$@"
}

halt() {
	case "$(uname -r)" in
	FreeBSD)
		# FreeBSD <= 13 (as of 2022-06) does not have graceful 'halt'
		if [ "$#" -eq 0 ]; then
			exec shutdown -h now
		fi
		;;
	esac
	command halt "$@"
}

if [ -n "${BUILDENV}" ]; then
        PS1="(buildenv) ${PS1}"
        unset CPUTYPE
fi

if [ -f ${HOME}/.profile.common.local ]; then
	. ${HOME}/.profile.common.local
fi
