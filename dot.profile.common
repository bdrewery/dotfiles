# vim: set filetype=sh:

which gcc > /dev/null 2>&1 || alias gcc=cc
which setterm > /dev/null 2>&1 && setterm -blength 0
which colordiff > /dev/null 2>&1 && alias cless="colordiff | less"

export EDITOR=vim
export PAGER=less
export LESS="R F X"
#export LESSOPEN='|~/.lessfilter %s'
export HISTSIZE=1000000 2>/dev/null
export HISTFILESIZE=$HISTSIZE 2>/dev/null
export SAVEHIST=$HISTSIZE 2>/dev/null
export IGNOREEOF=1
# Disable XOFF (^S)
stty -ixon
export MANWIDTH=tty
export LSCOLORS=ExGxFxdxCxegDxabagacad
export CLICOLOR=1

if [ -t 0 ]; then
	export GPG_TTY=$(tty)
fi

# Portable ls(1) colors
if [ "$DISABLE_LS_COLORS" != "true" ]
then
        # Find the option for using colors in ls, depending on the version: Linux or BSD
        ls --color -d . &>/dev/null 2>&1 && alias ls='ls -aF --color=tty' || alias ls='ls -GFa'
fi
export GREP_OPTIONS="--color=auto"
export TZ=America/Los_Angeles

export LANG=en_US.UTF-8
export LC_COLLATE=C
export MM_CHARSET=UTF-8

# Refresh ENV from tmux show-environment
refreshenv() {
  [ -z "${TMUX}" ] && return 0
  local current_value var value
  eval `tmux showenv 2>/dev/null | awk -F = '$1 !~ /^-/ {print $1 " " $2}' | while read var value; do
    # Get the current value
    eval current_value=\\$$var
    if [ "${value}" != "${current_value}" ]; then
      # Display the change on STDERR
      echo "Updating ${var} -> ${value}" >&2
      # Output VAR='VALUE' for the eval
      echo "${var}='${value}'"
    fi
  done`
}

[ -d ~/bin ] && export PATH=~/bin:${PATH}
[ -d ~/man ] && export MANPATH=~/man:${MANPATH}

for prefix in /usr/local /opt/local; do
	[ -d "${prefix}/bin" ] && export PATH="${PATH}:${prefix}/bin"
	[ -d "${prefix}/sbin" ] && export PATH="${PATH}:${prefix}/sbin"
#	[ -d "${prefix}/man" ] && export MANPATH="${MANPATH}${MANPATH:+:}${prefix}/man"
done

export PATH=${PATH}:~/.profile-repo/markjdb-scripts
export PATH=${PATH}:~/.profile-repo/markjdb-scripts/dtrace

if [ -n "${BUILDENV}" ]; then
        PS1="(buildenv) ${PS1}"
        unset CPUTYPE
else
	for dir in /usr/local/libexec/ccache /usr/lib/ccache \
	    /usr/lib/ccache/bin; do
		if [ -e "${dir}/cc" ]; then
			export PATH="${dir}:${PATH}"
			break
		fi
	done
fi

if [ -f /etc/proxy.conf ]; then
        . /etc/proxy.conf
fi

[ -f ~/.profile.common.local ] && . ~/.profile.common.local
